library(tseries)
library(rugarch)
library(rmgarch)
D_W_M_T_Bills <- read_excel("D:\\BITS\\3RD YEAR\\SEM 2\\ECON\\FRAM\\M-T-BILLS.xlsx")
D_W_M_T_Bills <- as.data.frame(D_W_M_T_Bills)
D_W_M_T_Billsxts <- xts(D_W_M_T_Bills[,-1], order.by = as.Date(D_W_M_T_Bills$Date))
NSE <- getSymbols.yahoo("^NSEI", from = "2020-04-01", to = "2024-03-31", verbose = F, auto.assign = F, periodicity = "monthly")
NSE <- na.omit(NSE)
vipind <- getSymbols.yahoo("VIPIND.NS", from = "2020-04-01", to = "2024-03-31", verbose = F, auto.assign = F, periodicity = "monthly")
vipind <- na.omit(vipind)
exNSE <- as.data.frame(monthlyReturn(NSE$NSEI.Close)[-1, ] - D_W_M_T_Bills$`Monthly Yield %`)
exNSE_returns <- monthlyReturn(NSE$NSEI.Close)
exNSE_df <- as.data.frame(exNSE_returns)
D_W_M_T_Bills$Date <- as.Date(D_W_M_T_Bills$Date)
exNSE_df$Date <- as.Date(index(exNSE_df))
aligned_data <- merge(exNSE_df, D_W_M_T_Bills, by = "Date")
aligned_data$ExcessReturns <- aligned_data$`monthlyReturn(NSE$NSEI.Close)` - aligned_data$`Monthly Yield %`
vipind_returns <- monthlyReturn(vipind$VIPIND.NS.Close)
vipind_df <- as.data.frame(vipind_returns)
vipind_df$Date <- as.Date(index(vipind_df))
aligned_vipind <- merge(vipind_df, aligned_data, by = "Date")
aligned_vipind$VIPIND.ExcessReturns <- aligned_vipind$`monthlyReturn(vipind$VIPIND.NS.Close)` - aligned_vipind$`Monthly Yield %`
regression_vipind <- lm(VIPIND.ExcessReturns ~ ExcessReturns, data = aligned_vipind)
# Check the structure and summary of the aligned_vipind dataframe
str(aligned_vipind)
summary(aligned_vipind)
# Check for NA values
sum(is.na(aligned_vipind$VIPIND.ExcessReturns))
sum(is.na(aligned_vipind$ExcessReturns))
# Check for NA values
sum(is.na(aligned_vipind$VIPIND.ExcessReturns))
sum(is.na(aligned_vipind$ExcessReturns))
aligned_vipind_clean <- na.omit(aligned_vipind[, c("VIPIND.ExcessReturns", "ExcessReturns")])
regression_vipind <- lm(VIPIND.ExcessReturns ~ ExcessReturns, data = aligned_vipind_clean)
summary(vipind)  # Replace with actual variable names as applicable
summary(NSE)
summary(D_W_M_T_Bills)
NSE
D_W_M_T_Bills <- read_excel("D:\\BITS\\3RD YEAR\\SEM 2\\ECON\\FRAM\\T-Bills_2024 (2).xlsx")
D_W_M_T_Bills <- as.data.frame(D_W_M_T_Bills)
D_W_M_T_Billsxts <- xts(D_W_M_T_Bills[,-1], order.by = as.Date(D_W_M_T_Bills$Date))
NSE <- getSymbols.yahoo("^NSEI", from = "2020-04-01", to = "2024-03-31", verbose = F, auto.assign = F, periodicity = "monthly")
NSE <- na.omit(NSE)
vipind <- getSymbols.yahoo("VIPIND.NS", from = "2020-04-01", to = "2024-03-31", verbose = F, auto.assign = F, periodicity = "monthly")
vipind <- na.omit(vipind)
exNSE <- as.data.frame(monthlyReturn(NSE$NSEI.Close)[-1, ] - D_W_M_T_Bills$`Monthly Yield %`)
NSE
D_W_M_T_Bills
NSE <- getSymbols.yahoo("^NSEI", from = "2020-04-01", to = "2022-03-31", verbose = F, auto.assign = F, periodicity = "monthly")
NSE <- na.omit(NSE)
NSE <- getSymbols.yahoo("^NSEI", from = "2020-04-01", to = "2022-03-31", verbose = F, auto.assign = F, periodicity = "monthly")
NSE <- na.omit(NSE)
vipind <- getSymbols.yahoo("VIPIND.NS", from = "2020-04-01", to = "2024-03-31", verbose = F, auto.assign = F, periodicity = "monthly")
vipind <- na.omit(vipind)
D_W_M_T_Bills <- read_excel("D:\\BITS\\3RD YEAR\\SEM 2\\ECON\\FRAM\\M-T-BILLS.xlsx")
D_W_M_T_Bills <- as.data.frame(D_W_M_T_Bills)
D_W_M_T_Billsxts <- xts(D_W_M_T_Bills[,-1], order.by = as.Date(D_W_M_T_Bills$Date))
exNSE <- as.data.frame(monthlyReturn(NSE$NSEI.Close)[-1, ] - D_W_M_T_Bills$`Monthly Yield %`)
NSE
D_W_M_T_Bills$'Monthly Yield %'
D_W_M_T_Bills
NSE
summary(regression_vipind)
D_W_M_T_Bills$Date <- as.Date(D_W_M_T_Bills$Date)
NSE_dates <- as.Date(rownames(NSE))
start_date <- as.Date("2020-04-01")
end_date <- as.Date("2023-03-01")  # Adjust this if your T-Bills data has a different end date
NSE_aligned <- NSE[NSE_dates >= start_date & NSE_dates <= end_date, ]
# For T-Bills, ensure it matches the same date range
D_W_M_T_Bills_aligned <- D_W_M_T_Bills[D_W_M_T_Bills$Date >= start_date & D_W_M_T_Bills$Date <= end_date, ]
print(head(NSE_aligned))
# Load the necessary library
require(quantmod)
# Set start and end dates
start_date <- "2020-04-01"
end_date <- "2024-03-31"
NSE <- getSymbols.yahoo("^NSEI", from = start_date, to = end_date, verbose = FALSE, auto.assign = FALSE)
VIPIND <- getSymbols.yahoo("VIPIND.NS", from = start_date, to = end_date, verbose = FALSE, auto.assign = FALSE)
# Making a data frame of the closing prices
Close <- cbind(NSE$NSEI.Close, VIPIND$VIPIND.NS.Close)
Close <- as.data.frame(Close)
Returns <- na.omit(as.xts(ROC(Close)))
regression <- lm(VIPIND.NS.Close ~ NSEI.Close, data = as.data.frame(Returns))
# Slope parameter = beta in CAPM model
summary(regression)
library(quantmod)
library(tseries)
library(forecast)
install.packages("forecast")
library(quantmod)
library(tseries)
library(forecast)
getSymbols("VIPIND.NS", src = "yahoo", from = "2020-04-01", to = "2024-03-31")
vipind_data <- get("VIPIND.NS")
returns_vipind <- as.xts(tail(data.frame(vipind_data$VIPIND.NS.Close), -1) / head(data.frame(vipind_data$VIPIND.NS.Close), -1) - 1, order.by=index(vipind_data)[-1])
plot(vipind_data$VIPIND.NS.Close, main = "VIPIND Closing Prices", xlab = "Date", ylab = "Close Price")
plot(returns_vipind, main = "VIPIND Daily Returns", xlab = "Date", ylab = "Returns")
adf.test(returns_vipind, alternative = "stationary")
plot(acf(returns_vipind, lag.max = 10), main = "ACF for VIPIND Returns")
plot(pacf(returns_vipind, lag.max = 10), main = "PACF for VIPIND Returns")
arima_final_vipind <- arima(returns_vipind, order = c(1,0,1))
arima_final_vipind <- arima(returns_vipind, order = c(1,0,1))
summary(arima_final_vipind)
predicted_vipind <- forecast(arima_final_vipind, h = 10)
plot(predicted_vipind)
tsdiag(arima_final_vipind)
plot(predicted_vipind)
stationary.test(returns_vipind, method = "pp")
library(aTSA)
stationary.test(returns_vipind, method = "pp")
# Install and load necessary packages
if (!require("quantmod")) install.packages("quantmod")
library(quantmod)
if (!require("tseries")) install.packages("tseries")
library(tseries)
if (!require("forecast")) install.packages("forecast")
library(forecast)
# Setting options to not convert retrieved data to xts object automatically
options("getSymbols.warning4.0"=FALSE)
options("getSymbols.yahoo.warning"=FALSE)
VIPIND <- getSymbols("VIPIND.NS", src = "yahoo", from = "2020-04-01", to = "2024-03-31", auto.assign = TRUE, warnings = FALSE)
VIPIND_DF <- data.frame(Date=index(VIPIND), coredata(VIPIND))
head(VIPIND_DF)
Returns_VIPIND <- na.omit(as.xts(tail(VIPIND[, "VIPIND.NS.Adjusted"], -1) /
head(VIPIND[, "VIPIND.NS.Adjusted"], -1) - 1,
order.by=index(VIPIND)[-1]))
price_col <- ifelse("VIPIND.NS.Adjusted" %in% colnames(VIPIND), "VIPIND.NS.Adjusted", "VIPIND.NS.Close")
Returns_VIPIND <- na.omit(as.xts(tail(VIPIND[, price_col], -1) / head(VIPIND[, price_col], -1) - 1, order.by=index(VIPIND)[-1]))
colnames(Returns_VIPIND) <- "Returns"
# Install and load necessary packages
if (!require("quantmod")) install.packages("quantmod")
library(quantmod)
if (!require("readxl")) install.packages("readxl")
library(readxl)
if (!require("xts")) install.packages("xts")
library(xts)
if (!require("PerformanceAnalytics")) install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
D_W_M_T_Bills <- read_excel("D:\\BITS\\3RD YEAR\\SEM 2\\ECON\\FRAM\\M-T-BILLS.xlsx")
D_W_M_T_Bills <- as.data.frame(D_W_M_T_Bills)
D_W_M_T_Bills_xts <- xts(D_W_M_T_Bills[,-1], order.by = as.Date(D_W_M_T_Bills$Date))
exVIPIND <- dailyReturn(VIPIND$VIPIND.NS.Adjusted)[-1, ] - na.locf(D_W_M_T_Bills_xts$`T-Bill% (Daily)`)
exVIPIND <- dailyReturn(VIPIND$VIPIND.NS.Adjusted)[-1, ] - na.locf(D_W_M_T_Bills_xts$`Monthly Yield %`)
VIPIND <- getSymbols.yahoo("VIPIND.NS", from = "2020-04-01", to = "2024-03-31", verbose = FALSE, auto.assign = FALSE)
VIPIND <- na.omit(VIPIND)
NSE <- getSymbols.yahoo("^NSEI", from = "2020-04-01", to = "2024-03-31", verbose = FALSE, auto.assign = FALSE)
NSE <- na.omit(NSE)
D_W_M_T_Bills <- read_excel("D:\\BITS\\3RD YEAR\\SEM 2\\ECON\\FRAM\\M-T-BILLS.xlsx")
D_W_M_T_Bills <- as.data.frame(D_W_M_T_Bills)
D_W_M_T_Bills_xts <- xts(D_W_M_T_Bills[,-1], order.by = as.Date(D_W_M_T_Bills$Date))
exVIPIND <- dailyReturn(VIPIND$VIPIND.NS.Adjusted)[-1, ] - na.locf(D_W_M_T_Bills_xts$`Monthly Yield %`)
colnames(D_W_M_T_Bills_xts)
D_W_M_T_Bills <- read_excel("D:\\BITS\\3RD YEAR\\SEM 2\\ECON\\FRAM\\D-T-BILLS.xlsx")
colnames(D_W_M_T_Bills)
exVIPIND <- dailyReturn(VIPIND$VIPIND.NS.Adjusted)[-1, ] - na.locf(D_W_M_T_Bills_xts$`Daily Yield %`)
D_W_M_T_Bills_xts <- xts(D_W_M_T_Bills[,-1], order.by = as.Date(D_W_M_T_Bills$Date))
colnames(D_W_M_T_Bills_xts)
exVIPIND <- dailyReturn(VIPIND$VIPIND.NS.Adjusted)[-1, ] - na.locf(D_W_M_T_Bills_xts$`Daily Yield %`)
exNSE <- dailyReturn(NSE$NSEI.Adjusted)[-1, ] - na.locf(D_W_M_T_Bills_xts$`Daily Yield %`)
exret <- merge(exVIPIND, exNSE, all = FALSE)
colnames(exret) <- c('VIPIND.ExcessReturns','NSEI.ExcessReturns')
returns <- as.xts(exret)
regression <- lm(VIPIND.ExcessReturns ~ NSEI.ExcessReturns, data = as.data.frame(returns[]))
summary(regression)
# Install and load necessary packages
if (!require("quantmod")) install.packages("quantmod")
library(quantmod)
if (!require("readxl")) install.packages("readxl")
library(readxl)
if (!require("xts")) install.packages("xts")
library(xts)
if (!require("PerformanceAnalytics")) install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
# Getting data for VISAKAIND from Yahoo Finance
VISAKAIND <- getSymbols.yahoo("VISAKAIND.NS", from = "2020-04-01", to = "2024-03-31", verbose = FALSE, auto.assign = FALSE)
VISAKAIND <- na.omit(VISAKAIND)
# Nifty Index as Market
NSE <- getSymbols.yahoo("^NSEI", from = "2020-04-01", to = "2024-03-31", verbose = FALSE, auto.assign = FALSE)
NSE <- na.omit(NSE)
# T-Bill Data
# Make sure to replace with your actual file path and file name
D_W_M_T_Bills <- read_excel("D:\\BITS\\3RD YEAR\\SEM 2\\ECON\\FRAM\\D-T-BILLS.xlsx")
D_W_M_T_Bills <- as.data.frame(D_W_M_T_Bills)
D_W_M_T_Bills_xts <- xts(D_W_M_T_Bills[,-1], order.by = as.Date(D_W_M_T_Bills$Date))
# Excess Returns for VISAKAIND and NSE
exVISAKAIND <- dailyReturn(VISAKAIND$VISAKAIND.NS.Adjusted)[-1, ] - na.locf(D_W_M_T_Bills_xts$`Daily Yield %`)
D_W_M_T_Bills_xts <- xts(D_W_M_T_Bills[,-1], order.by = as.Date(D_W_M_T_Bills$Date))
colnames(D_W_M_T_Bills_xts)
exVISAKAIND <- dailyReturn(VISAKAIND$VISAKAIND.NS.Adjusted)[-1, ] - na.locf(D_W_M_T_Bills_xts$`Daily Yield %`)
exVISAKAIND <- dailyReturn(VISAKAIND$VISAKAIND.NS.Adjusted)[-1, ] - na.locf(D_W_M_T_Bills_xts$`Daily Yield %`)
D_W_M_T_Bills <- read_excel("D:\\BITS\\3RD YEAR\\SEM 2\\ECON\\FRAM\\D-T-BILLS.xlsx")
colnames(D_W_M_T_Bills)
D_W_M_T_Bills <- as.data.frame(D_W_M_T_Bills)
D_W_M_T_Bills_xts <- xts(D_W_M_T_Bills[,-1], order.by = as.Date(D_W_M_T_Bills$Date))
colnames(D_W_M_T_Bills_xts)
D_W_M_T_Bills <- read_excel("D:\\BITS\\3RD YEAR\\SEM 2\\ECON\\FRAM\\D-T-BILLS.xlsx")
colnames(D_W_M_T_Bills)
D_W_M_T_Bills_xts <- xts(D_W_M_T_Bills[,-1], order.by = as.Date(D_W_M_T_Bills$Date))
D_W_M_T_Bills_xts <- xts(D_W_M_T_Bills[,-1], order.by = as.Date(D_W_M_T_Bills$Date))
colnames(D_W_M_T_Bills_xts)
exVISAKAIND <- dailyReturn(VISAKAIND$VISAKAIND.NS.Adjusted)[-1, ] - na.locf(D_W_M_T_Bills_xts$`Daily Yield %`)
exNSE <- dailyReturn(NSE$NSEI.Adjusted)[-1, ] - na.locf(D_W_M_T_Bills_xts$`Daily Yield %`)
exret <- merge(exVISAKAIND, exNSE, all = FALSE)
colnames(exret) <- c('VISAKAIND.ExcessReturns','NSEI.ExcessReturns')
# Convert to xts
returns <- as.xts(exret)
# CAPM Model for VISAKAIND
regression <- lm(VISAKAIND.ExcessReturns ~ NSEI.ExcessReturns, data = as.data.frame(returns[]))
summary(regression)
exVISAKAIND <- dailyReturn(VISAKAIND$VISAKAIND.NS.Adjusted)[-1, ] - na.locf(D_W_M_T_Bills_xts$`Daily Yield %`)
VISHNU <- getSymbols.yahoo("VISHNU.NS", from = "2020-04-01", to = "2024-03-31", verbose = FALSE, auto.assign = FALSE)
VISHNU <- na.omit(VISHNU)
exVISHNU <- dailyReturn(VISHNU$VISHNU.NS.Adjusted)[-1, ] - na.locf(D_W_M_T_Bills_xts$`Daily Yield %`)
exNSE <- dailyReturn(NSE$NSEI.Adjusted)[-1, ] - na.locf(D_W_M_T_Bills_xts$`Daily Yield %`)
# Combining the Excess Returns
exret <- merge(exVISHNU, exNSE, all = FALSE)
colnames(exret) <- c('VISHNU.ExcessReturns','NSEI.ExcessReturns')
# Convert to xts
returns <- as.xts(exret)
# CAPM Model for VISHNU
regression <- lm(VISHNU.ExcessReturns ~ NSEI.ExcessReturns, data = as.data.frame(returns[]))
summary(regression)
VIPIND <- getSymbols.yahoo("VIPIND.NS", from = "2020-04-01", to = "2024-03-31", verbose = FALSE, auto.assign = FALSE,periodicity = "weekly")
VIPIND <- na.omit(VIPIND)
VIPIND <- na.omit(VIPIND)
VIPIND
if (!require("quantmod")) install.packages("quantmod")
library(quantmod)
if (!require("readxl")) install.packages("readxl")
library(readxl)
if (!require("xts")) install.packages("xts")
library(xts)
if (!require("PerformanceAnalytics")) install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
# Getting data for VIPIND from Yahoo Finance
VIPIND <- getSymbols.yahoo("VIPIND.NS", from = "2020-04-01", to = "2024-03-31", verbose = FALSE, auto.assign = FALSE,periodicity = "weekly")
VIPIND <- na.omit(VIPIND)
# Nifty Index as Market
NSE <- getSymbols.yahoo("^NSEI", from = "2020-04-01", to = "2024-03-31", verbose = FALSE, auto.assign = FALSE,periodicity = "weekly")
NSE <- na.omit(NSE)
# T-Bill Data
# Make sure to replace with your actual file path and file name
D_W_M_T_Bills <- read_excel("D:\\BITS\\3RD YEAR\\SEM 2\\ECON\\FRAM\\W-T-BILLS.xlsx")
colnames(D_W_M_T_Bills)
D_W_M_T_Bills <- as.data.frame(D_W_M_T_Bills)
D_W_M_T_Bills_xts <- xts(D_W_M_T_Bills[,-1], order.by = as.Date(D_W_M_T_Bills$Date))
colnames(D_W_M_T_Bills_xts)
D_W_M_T_Bills <- read_excel("D:\\BITS\\3RD YEAR\\SEM 2\\ECON\\FRAM\\W-T-BILLS.xlsx")
colnames(D_W_M_T_Bills)
colnames(D_W_M_T_Bills)
D_W_M_T_Bills <- as.data.frame(D_W_M_T_Bills)
colnames(D_W_M_T_Bills)
D_W_M_T_Bills <- as.data.frame(D_W_M_T_Bills)
D_W_M_T_Bills_xts <- xts(D_W_M_T_Bills[,-1], order.by = as.Date(D_W_M_T_Bills$Date))
colnames(D_W_M_T_Bills)
D_W_M_T_Bills <- as.data.frame(D_W_M_T_Bills)
D_W_M_T_Bills_xts <- xts(D_W_M_T_Bills[,-1], order.by = as.Date(D_W_M_T_Bills$Date))
colnames(D_W_M_T_Bills_xts)
D_W_M_T_Bills <- read_excel("D:\\BITS\\3RD YEAR\\SEM 2\\ECON\\FRAM\\D-T-BILLS.xlsx")
D_W_M_T_Bills <- as.data.frame(D_W_M_T_Bills)
# Converting to xts and setting column names manually
D_W_M_T_Bills_xts <- xts(D_W_M_T_Bills[,"Weekly Yield %"], order.by = as.Date(D_W_M_T_Bills$Date))
D_W_M_T_Bills_xts <- xts(D_W_M_T_Bills[,"Weekly Yield %"], order.by = as.Date(D_W_M_T_Bills$Date))
# Reading T-Bill data
D_W_M_T_Bills <- read_excel("D:\\BITS\\3RD YEAR\\SEM 2\\ECON\\FRAM\\D-T-BILLS.xlsx")
D_W_M_T_Bills <- as.data.frame(D_W_M_T_Bills)
# Converting to xts and setting column names manually
D_W_M_T_Bills_xts <- xts(D_W_M_T_Bills[,"Weekly Yield %"], order.by = as.Date(D_W_M_T_Bills$Date))
D_W_M_T_Bills <- as.data.frame(D_W_M_T_Bills)
print(colnames(D_W_M_T_Bills))
yield_matrix <- as.matrix(D_W_M_T_Bills["Weekly Yield %"])
D_W_M_T_Bills <- read_excel("D:\\BITS\\3RD YEAR\\SEM 2\\ECON\\FRAM\\W-T-BILLS.xlsx")
colnames(D_W_M_T_Bills)
D_W_M_T_Bills <- as.data.frame(D_W_M_T_Bills)
colnames(D_W_M_T_Bills)
D_W_M_T_Bills_xts <- xts(D_W_M_T_Bills[,-1], order.by = as.Date(D_W_M_T_Bills$Date))
colnames(D_W_M_T_Bills_xts)
colnames(D_W_M_T_Bills_xts)<-"Date, Weekly Yield %"
colnames(D_W_M_T_Bills_xts)
colnames(D_W_M_T_Bills_xts)<-"Weekly Yield %"
colnames(D_W_M_T_Bills_xts)
exVIPIND <- dailyReturn(VIPIND$VIPIND.NS.Adjusted)[-1, ] - na.locf(D_W_M_T_Bills_xts$`Weekly Yield %`)
exNSE <- dailyReturn(NSE$NSEI.Adjusted)[-1, ] - na.locf(D_W_M_T_Bills_xts$`Weekly Yield %`)
exret <- merge(exVIPIND, exNSE, all = FALSE)
colnames(exret) <- c('VIPIND.ExcessReturns','NSEI.ExcessReturns')
# Convert to xts
returns <- as.xts(exret)
# CAPM Model for VIPIND
regression <- lm(VIPIND.ExcessReturns ~ NSEI.ExcessReturns, data = as.data.frame(returns[]))
summary(regression)
VISAKAIND <- getSymbols.yahoo("VISAKAIND.NS", from = "2020-04-01", to = "2024-03-31", verbose = FALSE, auto.assign = FALSE, periodicity = "weekly")
VISAKAIND <- na.omit(VISAKAIND)
exVISAKAIND <- dailyReturn(VISAKAIND$VISAKAIND.NS.Adjusted)[-1, ] - na.locf(D_W_M_T_Bills_xts$`Weekly Yield %`)
exNSE <- dailyReturn(NSE$NSEI.Adjusted)[-1, ] - na.locf(D_W_M_T_Bills_xts$`Weekly Yield %`)
exret <- merge(exVISAKAIND, exNSE, all = FALSE)
colnames(exret) <- c('VISAKAIND.ExcessReturns','NSEI.ExcessReturns')
# Convert to xts
returns <- as.xts(exret)
# CAPM Model for VISAKAIND
regression <- lm(VISAKAIND.ExcessReturns ~ NSEI.ExcessReturns, data = as.data.frame(returns[]))
summary(regression)
VISHNU <- getSymbols.yahoo("VISHNU.NS", from = "2020-04-01", to = "2024-03-31", verbose = FALSE, auto.assign = FALSE, periodicity = "weekly")
VISHNU <- na.omit(VISHNU)
exVISHNU <- dailyReturn(VISHNU$VISHNU.NS.Adjusted)[-1, ] - na.locf(D_W_M_T_Bills_xts$`Weekly Yield %`)
exNSE <- dailyReturn(NSE$NSEI.Adjusted)[-1, ] - na.locf(D_W_M_T_Bills_xts$`Weekly Yield %`)
# Combining the Excess Returns
exret <- merge(exVISHNU, exNSE, all = FALSE)
colnames(exret) <- c('VISHNU.ExcessReturns','NSEI.ExcessReturns')
# Convert to xts
returns <- as.xts(exret)
# CAPM Model for VISHNU
regression <- lm(VISHNU.ExcessReturns ~ NSEI.ExcessReturns, data = as.data.frame(returns[]))
summary(regression)
# Install and load necessary packages
if (!require("quantmod")) install.packages("quantmod")
library(quantmod)
if (!require("readxl")) install.packages("readxl")
library(readxl)
if (!require("xts")) install.packages("xts")
library(xts)
if (!require("PerformanceAnalytics")) install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
# Getting data for VIPIND from Yahoo Finance
VIPIND <- getSymbols.yahoo("VIPIND.NS", from = "2020-04-01", to = "2024-03-31", verbose = FALSE, auto.assign = FALSE,periodicity = "monthly")
VIPIND <- na.omit(VIPIND)
# Nifty Index as Market
NSE <- getSymbols.yahoo("^NSEI", from = "2020-04-01", to = "2024-03-31", verbose = FALSE, auto.assign = FALSE,periodicity = "monthly")
NSE <- na.omit(NSE)
# T-Bill Data
# Make sure to replace with your actual file path and file name
D_W_M_T_Bills <- read_excel("D:\\BITS\\3RD YEAR\\SEM 2\\ECON\\FRAM\\M-T-BILLS.xlsx")
colnames(D_W_M_T_Bills)
D_W_M_T_Bills <- as.data.frame(D_W_M_T_Bills)
colnames(D_W_M_T_Bills)
D_W_M_T_Bills_xts <- xts(D_W_M_T_Bills[,-1], order.by = as.Date(D_W_M_T_Bills$Date))
colnames(D_W_M_T_Bills_xts)<-"Monthly Yield %"
colnames(D_W_M_T_Bills_xts)
exVIPIND <- dailyReturn(VIPIND$VIPIND.NS.Adjusted)[-1, ] - na.locf(D_W_M_T_Bills_xts$`Monthly Yield %`)
exNSE <- dailyReturn(NSE$NSEI.Adjusted)[-1, ] - na.locf(D_W_M_T_Bills_xts$`Monthly Yield %`)
exret <- merge(exVIPIND, exNSE, all = FALSE)
colnames(exret) <- c('VIPIND.ExcessReturns','NSEI.ExcessReturns')
# Convert to xts
returns <- as.xts(exret)
# CAPM Model for VIPIND
regression <- lm(VIPIND.ExcessReturns ~ NSEI.ExcessReturns, data = as.data.frame(returns[]))
str(returns)
summary(returns)
colnames(returns)
sum(is.na(returns))
returns_df <- as.data.frame(returns)
head(returns_df)
regression <- lm(VIPIND.ExcessReturns ~ NSEI.ExcessReturns, data = returns_df)
sum(!is.na(returns_df$VIPIND.ExcessReturns))
sum(!is.na(returns_df$NSEI.ExcessReturns))
sum(complete.cases(returns_df))
returns_df$VIPIND.ExcessReturns <- na.locf(returns_df$VIPIND.ExcessReturns)
returns_df$NSEI.ExcessReturns <- na.locf(returns_df$NSEI.ExcessReturns)
D_W_M_T_Bills <- read_excel("D:\\BITS\\3RD YEAR\\SEM 2\\ECON\\FRAM\\M-T-BILLS-updated")
D_W_M_T_Bills <- read_excel("D:\\BITS\\3RD YEAR\\SEM 2\\ECON\\FRAM\\M-T-BILLS-updated")
D_W_M_T_Bills <- read_excel("D:\\BITS\\3RD YEAR\\SEM 2\\ECON\\FRAM\\M-T-BILLS")
if (!require("quantmod")) install.packages("quantmod")
library(quantmod)
if (!require("tseries")) install.packages("tseries")
library(tseries)
if (!require("forecast")) install.packages("forecast")
library(forecast)
if (ncol(VIPIND) == 0) {
stop("No data fetched. Check symbol and internet connection.")
}
getSymbols("VIPIND.NS", src = "yahoo", from = "2020-04-01", to = "2024-03-31")
vipind_data <- get("VIPIND.NS")
returns_vipind <- as.xts(tail(data.frame(vipind_data$VIPIND.NS.Close), -1) / head(data.frame(vipind_data$VIPIND.NS.Close), -1) - 1, order.by=index(vipind_data)[-1])
colnames(returns_vipind) <- "returns_vipind"
returns_vipind <- na.omit(returns_vipind)
returns_vipind
plot(vipind_data$VIPIND.NS.Close, main = "VIPIND Closing Prices", xlab = "Date", ylab = "Close Price")
plot(returns_vipind, main = "VIPIND Daily Returns", xlab = "Date", ylab = "Returns")
adf.test(returns_vipind, alternative = "stationary")
plot(acf(returns_vipind, lag.max = 10), main = "ACF for VIPIND Returns")
plot(pacf(returns_vipind, lag.max = 10), main = "PACF for VIPIND Returns")
auto.arima(returns_vipind, ic="bic")
arima_final_vipind <- arima(returns_vipind, order = c(0,0,0))
summary(arima_final_vipind)
getSymbols("PRAJIND.NS", src = "yahoo", from = "2020-04-01", to = "2024-03-31")
getSymbols("PRAJIND.NS", src = "yahoo", from = "2020-04-01", to = "2024-03-31")
PRAJIND_data <- get("PRAJIND.NS")
returns_PRAJIND <- as.xts(tail(data.frame(PRAJIND_data$PRAJIND.NS.Close), -1) / head(data.frame(PRAJIND_data$PRAJIND.NS.Close), -1) - 1, order.by=index(PRAJIND_data)[-1])
colnames(returns_PRAJIND) <- "returns_PRAJIND"
returns_PRAJIND <- na.omit(returns_PRAJIND)
returns_PRAJIND
plot(PRAJIND_data$PRAJIND.NS.Close, main = "PRAJIND Closing Prices", xlab = "Date", ylab = "Close Price")
plot(PRAJIND_data$PRAJIND.NS.Close, main = "PRAJIND Closing Prices", xlab = "Date", ylab = "Close Price")
plot(returns_PRAJIND, main = "PRAJIND Daily Returns", xlab = "Date", ylab = "Returns")
adf.test(returns_PRAJIND, alternative = "stationary")
plot(acf(returns_PRAJIND, lag.max = 10), main = "ACF for PRAJIND Returns")
plot(pacf(returns_PRAJIND, lag.max = 10), main = "PACF for PRAJIND Returns")
auto.arima(returns_PRAJIND, ic="bic")
arima_final_PRAJIND <- arima(returns_PRAJIND, order = c(0,0,0))
summary(arima_final_PRAJIND)
predicted_PRAJIND <- forecast(arima_final_PRAJIND, h = 10)
predicted_PRAJIND
tsdiag(arima_final_PRAJIND)
getSymbols("RAMKY.NS", src = "yahoo", from = "2020-04-01", to = "2024-03-31")
RAMKY_data <- get("RAMKY.NS")
returns_RAMKY <- as.xts(tail(data.frame(RAMKY_data$RAMKY.NS.Close), -1) / head(data.frame(RAMKY_data$RAMKY.NS.Close), -1) - 1, order.by=index(RAMKY_data)[-1])
colnames(returns_RAMKY) <- "returns_RAMKY"
returns_RAMKY <- na.omit(returns_RAMKY)
returns_RAMKY
plot(RAMKY_data$RAMKY.NS.Close, main = "RAMKY Closing Prices", xlab = "Date", ylab = "Close Price")
plot(returns_RAMKY, main = "RAMKY Daily Returns", xlab = "Date", ylab = "Returns")
adf.test(returns_RAMKY, alternative = "stationary")
plot(acf(returns_RAMKY, lag.max = 10), main = "ACF for RAMKY Returns")
plot(pacf(returns_RAMKY, lag.max = 10), main = "PACF for RAMKY Returns")
auto.arima(returns_RAMKY, ic="bic")
arima_final_RAMKY <- arima(returns_RAMKY, order = c(0,0,0))
summary(arima_final_RAMKY)
predicted_RAMKY <- forecast(arima_final_RAMKY, h = 10)
predicted_RAMKY
getSymbols("RUCHIRA.NS", src = "yahoo", from = "2020-04-01", to = "2024-03-31")
RUCHIRA_data <- get("RUCHIRA.NS")
returns_RUCHIRA <- as.xts(tail(data.frame(RUCHIRA_data$RUCHIRA.NS.Close), -1) / head(data.frame(RUCHIRA_data$RUCHIRA.NS.Close), -1) - 1, order.by=index(RUCHIRA_data)[-1])
colnames(returns_RUCHIRA) <- "returns_RUCHIRA"
returns_RUCHIRA <- na.omit(returns_RUCHIRA)
returns_RUCHIRA
plot(RUCHIRA_data$RUCHIRA.NS.Close, main = "RUCHIRA Closing Prices", xlab = "Date", ylab = "Close Price")
plot(returns_RUCHIRA, main = "RUCHIRA Daily Returns", xlab = "Date", ylab = "Returns")
adf.test(returns_RUCHIRA, alternative = "stationary")
plot(acf(returns_RUCHIRA, lag.max = 10), main = "ACF for RUCHIRA Returns")
plot(pacf(returns_RUCHIRA, lag.max = 10), main = "PACF for RUCHIRA Returns")
library(tidyquant)
library(timetk)
library(tidyr)
library(ggplot2)
library(dplyr)
tick <- c('SBIN.NS', 'DMART.NS', 'TATASTEEL.NS', 'HAL.NS')
price_data <- tq_get(tick,
from = '2022-01-01',
to = '2023-01-01',
get = 'stock.prices')
library(tidyquant)
library(tidyquant)
install.packages("tidyquant")
install.packages("quantmod")
library(tidyquant)
library(timetk)
library(tidyr)
library(ggplot2)
library(dplyr)
install.packages("tidyquant")
library(tidyquant)
library(timetk)
library(tidyr)
library(ggplot2)
library(dplyr)
tick <- c('SBIN.NS', 'DMART.NS', 'TATASTEEL.NS', 'HAL.NS')
library(tidyquant)
library(timetk)
library(tidyr)
library(ggplot2)
tick <- c('SBIN.NS', 'DMART.NS', 'TATASTEEL.NS', 'HAL.NS')
price_data <- tq_get(tick,
from = '2022-01-01',
to = '2023-01-01',
get = 'stock.prices')
head(price_data)
install.packages("tidyquant", repos = "https://cloud.r-project.org/")
install.packages("timetk", repos = "https://cloud.r-project.org/")
library(tidyquant)
install.packages("timetk", repos = "https://cloud.r-project.org/")
plot(vipind_data$VIPIND.NS.Close, main = "VIPIND Closing Prices", xlab = "Date", ylab = "Close Price")
library(quantmod)
if (!require("tseries")) install.packages("tseries")
library(tseries)
if (!require("forecast")) install.packages("forecast")
library(forecast)
if (ncol(VIPIND) == 0) {
stop("No data fetched. Check symbol and internet connection.")
}
getSymbols("VIPIND.NS", src = "yahoo", from = "2020-04-01", to = "2024-03-31")
vipind_data <- get("VIPIND.NS")
returns_vipind <- as.xts(tail(data.frame(vipind_data$VIPIND.NS.Close), -1) / head(data.frame(vipind_data$VIPIND.NS.Close), -1) - 1, order.by=index(vipind_data)[-1])
colnames(returns_vipind) <- "returns_vipind"
returns_vipind <- na.omit(returns_vipind)
returns_vipind
plot(vipind_data$VIPIND.NS.Close, main = "VIPIND Closing Prices", xlab = "Date", ylab = "Close Price")
VISHNU
if (!require("quantmod")) install.packages("quantmod")
library(quantmod)
if (!require("tseries")) install.packages("tseries")
library(tseries)
if (!require("forecast")) install.packages("forecast")
library(forecast)
if (ncol(VIPIND) == 0) {
stop("No data fetched. Check symbol and internet connection.")
}
getSymbols("VISHNU.NS", src = "yahoo", from = "2020-04-01", to = "2024-03-31")
VISHNU_data <- get("VISHNU.NS")
returns_VISHNU <- as.xts(tail(data.frame(VISHNU_data$VISHNU.NS.Close), -1) / head(data.frame(VISHNU_data$VISHNU.NS.Close), -1) - 1, order.by=index(VISHNU_data)[-1])
colnames(returns_VISHNU) <- "returns_VISHNU"
returns_VISHNU <- na.omit(returns_VISHNU)
returns_VISHNU
plot(VISHNU_data$VISHNU.NS.Close, main = "VISHNU Closing Prices", xlab = "Date", ylab = "Close Price")
plot(returns_VISHNU, main = "VISHNU Daily Returns", xlab = "Date", ylab = "Returns")
adf.test(returns_VISHNU, alternative = "stationary")
plot(acf(returns_VISHNU, lag.max = 10), main = "ACF for VISHNU Returns")
plot(pacf(returns_VISHNU, lag.max = 10), main = "PACF for VISHNU Returns")
auto.arima(returns_VISHNU, ic="bic")
arima_final_VISHNU <- arima(returns_VISHNU, order = c(1,1,0))
summary(arima_final_VISHNU)
predicted_VISHNU <- forecast(arima_final_VISHNU, h = 10)
predicted_VISHNU
tsdiag(arima_final_VISHNU)
